<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.5.xsd"
        objectQuotingStrategy="QUOTE_ONLY_RESERVED_WORDS">
    <changeSet id="1-1" author="administrator">
        <createSequence incrementBy="1" sequenceName="seq_company" startValue="1"/>
    </changeSet>
    <changeSet id="1-2" author="administrator">
        <createSequence incrementBy="1" sequenceName="seq_station" startValue="1"/>
    </changeSet>
    <changeSet id="1-3" author="administrator">
        <createTable tableName="tbl_company">
            <column name="id" type="bigint">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_tbl_company"/>
            </column>
            <column name="created_by" type="VARCHAR(255)"/>
            <column name="created_date" type="DATETIME"/>
            <column name="modified_by" type="VARCHAR(255)"/>
            <column name="modified_date" type="DATETIME"/>
            <column defaultValueNumeric="0" name="version" type="integer"/>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="parent_company_id" type="bigint">
                <constraints nullable="true"/>
            </column>
            <column name="deleted" type="boolean" defaultValue="0"></column>
        </createTable>
    </changeSet>
    <changeSet id="1-4" author="administrator">
        <createTable tableName="tbl_station">
            <column name="id" type="bigint">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_tbl_station"/>
            </column>
            <column name="created_by" type="VARCHAR(255)"/>
            <column name="created_date" type="DATETIME"/>
            <column name="modified_by" type="VARCHAR(255)"/>
            <column name="modified_date" type="DATETIME"/>
            <column defaultValueNumeric="0" name="version" type="integer"/>
            <column name="name" type="VARCHAR(255)">
                <constraints nullable="false"/>
            </column>
            <column name="lat" type="${doubleType}">
                <constraints nullable="false"/>
            </column>
            <column name="lng" type="${doubleType}">
                <constraints nullable="false"/>
            </column>
            <column name="company_id" type="bigint">
                <constraints nullable="false"/>
            </column>
            <column name="deleted" type="boolean" defaultValue="0"></column>
            <column name="location" type="geometry(Point, 4326)"/>
        </createTable>
    </changeSet>
    <changeSet id="1-5" author="administrator">
        <addForeignKeyConstraint baseColumnNames="parent_company_id" baseTableName="tbl_company"
                                 constraintName="fk_tbl_parent_company_id" referencedColumnNames="id"
                                 referencedTableName="tbl_company"/>
        <addForeignKeyConstraint baseColumnNames="company_id" baseTableName="tbl_station"
                                 constraintName="fk_tbl_station_on_company" referencedColumnNames="id"
                                 referencedTableName="tbl_company"/>
    </changeSet>
    <changeSet id="1-6" author="b.mohamadi">
        <sql endDelimiter="/">
            CREATE OR REPLACE FUNCTION fn_update_location_trigger()
            RETURNS TRIGGER AS $$
            BEGIN
            IF (NEW.lat IS NOT NULL AND NEW.lng IS NOT NULL) THEN
                NEW.location := ST_SetSRID(ST_MakePoint(NEW.lng, NEW.lat), 4326);
            END IF;
            RETURN NEW;
            END;
            $$ LANGUAGE plpgsql;/
        </sql>
        <sql endDelimiter="/">
            CREATE TRIGGER trigger_update_location
                BEFORE INSERT OR UPDATE ON tbl_station
                                     FOR EACH ROW
                                     EXECUTE FUNCTION fn_update_location_trigger();/
        </sql>
    </changeSet>
</databaseChangeLog>